// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop.Data;

#nullable disable

namespace PetShop.Migrations
{
    [DbContext(typeof(PetShopContext))]
    [Migration("20241111180814_pedidosId")]
    partial class pedidosId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetShop.Models.Animais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientesId")
                        .HasColumnType("int");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("nomeAnimal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.ToTable("Animais");
                });

            modelBuilder.Entity("PetShop.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PetShop.Models.Empregados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEmpregado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("dataAdmissao")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Empregados");
                });

            modelBuilder.Entity("PetShop.Models.Pedidos", b =>
                {
                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("EmpregadoId")
                        .HasColumnType("int");

                    b.Property<int>("AnimaisId")
                        .HasColumnType("int");

                    b.Property<int>("EmpregadosId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ServicosId")
                        .HasColumnType("int");

                    b.HasKey("ServicoId", "AnimalId", "EmpregadoId");

                    b.HasIndex("AnimaisId");

                    b.HasIndex("EmpregadosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("PetShop.Models.Servicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("data")
                        .HasColumnType("date");

                    b.Property<int>("preco")
                        .HasColumnType("int");

                    b.Property<string>("tipoServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("PetShop.Models.Animais", b =>
                {
                    b.HasOne("PetShop.Models.Clientes", "Clientes")
                        .WithMany("Animal")
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("PetShop.Models.Pedidos", b =>
                {
                    b.HasOne("PetShop.Models.Animais", "Animais")
                        .WithMany("Pedidos")
                        .HasForeignKey("AnimaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Models.Empregados", "Empregados")
                        .WithMany("Pedidos")
                        .HasForeignKey("EmpregadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShop.Models.Servicos", "Servicos")
                        .WithMany("Pedidos")
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animais");

                    b.Navigation("Empregados");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("PetShop.Models.Animais", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PetShop.Models.Clientes", b =>
                {
                    b.Navigation("Animal");
                });

            modelBuilder.Entity("PetShop.Models.Empregados", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PetShop.Models.Servicos", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
